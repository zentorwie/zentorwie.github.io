---
layout: post
title: "2015 UESTC Winter Training #5"
date: 2015-01-21 01:57:27 +0800
comments: true
categories: ACM
---


##前言
今天真是跌宕起伏，卡一道SB题卡了全场，前四个小时排名到30+十分郁闷，还好第五小时在压力之下超常发挥过了3题（包括一开始卡的那道），7题rank8。

##Problem A	 UVALive 4863	Balloons
题意：有两个放气球的房间，记为A和B，分别有A个气球和B个气球。地图上n个地方需要送气球过去，每个地点分别给出三个数K、DA、DB，分别表示需要送的气球数，以及分别到房间A和B的距离。只算送出去所走的路程，问送出所有需要送的气球，总路程最少是多少。

解法：贪心。假设一个离A更近，即DA<DB，那么如果有i个气球原先准备从A送，现在改成从B送，那么增加的路程就是i*(DB-DA)。设X = abs(DA - DB)，X的绝对值越大，说明房间应该被越优先从近点送出。按照X排个序然后逐个处理即可。

证明：我们用一个序列表示点被处理的顺序，每个点处理时都尽可能地采取最短路。假设有一个点i，Xi = abs(DAi - DBi)，有另外一个点j，如果Xi > Xj但是j排在i之前，则当j占用了和i一样的近点（不妨设它们都离A更近），那么i点有些点将不得不由B点送出，假设有p个i点的气球不得不由B点送出，这p个所多出来的花费为p * Xi，如果交换i和j的次序，则相应地j点同样将有p个点不得不由B点送出，多出的花费为p * Xj，由于Xi > Xj，所以交换后结果更优。

##Problem E	UVALive 4867	Maximum Square
题意：给一个N×M的0-1矩阵，求出最大的全1子方阵的列数。

今天就卡在这道题上面了，我很笨地搬出了二维BIT来维护前缀和，实际上一个二维数组即可，我最后15分钟才想起来改了才A了。

解法：我的做法是先处理出二维前缀和（O(1)查询），即某个矩形区域的和，然后二分答案，每个答案用O(n^2)检查，总复杂度是O(n^2 logn)

##Problem F	UVALive 4868	Palindrometer
题意：给一个长度为2-9范围内的数字串，表示汽车的行程表上面的数字，问最少需要再走多少路程可以使得表上的数字串是回文串。前导零也要算在回文串里面。

解法：显然9位数中的回文数并不是很多，通过枚举每一位数就可以全部求出来，几个vector<int>分别存不同长度的回文数，然后读一下输入的长度，在对应的vector<int>里面lower_bound查一下然后减掉所给的数就是答案了。


##Problem G	UVALive 4869	Profits
题意：给一个数列，有正有负，求最大连续和。

解法：最大连续和可以用线段树来维护，但是有个更简单的办法，就是维护前缀和，从左往右扫，记录下在现在这个位置之前的最小的前缀和，然后再计算当前位置的前缀和，减去那个最小值，就能得到一个答案，找一个最大的就是最后答案了。更具体的解释是，通过这样做，就把前缀和数组的一段最大正增量给求出来了。复杂度O(n)。

##Problem H	UVALive 4870	Roller Coaster
题意：有个人去坐过山车，过山车轨道经过n个部分，在每一个部分里，主角可以选择闭眼或者睁眼，主角有个晕厥值，这个值有上限，超过上限就会get sick，如果第i部分主角睁眼了，那么他可以得到快乐值f[i]，但是晕厥值会加d[i]，如果选择闭眼，那么晕厥值可以下降k点。现在问主角在不挂掉的情况下能获得的最大快乐值总和是多少？

解法：稍微裸了一点的0-1背包，只不过不拿某件物品的代价是负的。这道题的晕厥值上限（背包容量）略大，但是最大快乐值总和（最大价值总和）可以接受，所以可以这样定义：
dp[i] 表示 获得快乐值总和为i时晕厥值的最小值，初始时dp[0] = 0, 其他dp[i] = INF
转移方程看代码吧：）


##Problem I	UVALive 4871	Skyline
题意：给一个数n，问有多少n的排列使得没有任意三个数（可以不连续）满足递增关系。

解法：设f(n)表示符合题意的n排列方案数。
推了推发现：
f(0) = f(1) = 1
f(2) = 2
f(3) = 5
f(4) = 14
f(n) = f(n-1)f(0) + f(n-2)f(1) + ... + f(0)f(n-1)
卡特兰数。

##Problem J	UVALive 4872	Underground Cables
题意：二维平面上有n个点，这些点的坐标给出，现在要把这些点用线段连接起来，使得所有点直接或间接地连在一起，要求线段不能相交。问线段的长度总和最小是多少？

解法：最小生成树，可以证明这些点的最小生成树的边必定不相交，因为如果出现了一对相交的线段，那么重新连接这两条线段的端点，可以得到长度和更短的两条边。



##总结
今天真是惊险啊，好在最后没有放弃，挽救了局势，体验了一次起死回生的过程。我要牢记在心：当比赛没有耗尽最后一秒钟时，不论局势多么困难，不自暴自弃，好好看题，不乱阵脚，就有扭转局势的可能。
